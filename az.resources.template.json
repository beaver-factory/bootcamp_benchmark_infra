{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ResourceGroupName": {
      "type": "string"
    },
    "StorageAccountName": {
      "type": "string"
    },
    "BlobContainer1": {
      "type": "string"
    },
    "BlobContainer2": {
      "type": "string"
    },
    "BlobContainer3": {
      "type": "string"
    },
    "FAInsightsName": {
      "type": "string"
    },
    "FAServerFarmName": {
      "type": "string"
    },
    "CollectorsFAName": {
      "type": "string"
    },
    "ProcessorsFAName": {
      "type": "string"
    },
    "LoadersFAName": {
      "type": "string"
    },
    "adminLogin": {
      "type": "string"
    },
    "adminPassword": {
      "type": "string"
    },
    "PostgresServerName": {
      "type": "string"
    },
    "PostgresDBName": {
      "type": "string"
    },
    "KeyVaultName": {
      "type": "string"
    },
    "KeyVaultEnabledForDeployment": {
      "type": "bool"
    },
    "KeyVaultEnabledForDiskEncryption": {
      "type": "bool"
    },
    "KeyVaultEnabledForTemplateDeployment": {
      "type": "bool"
    },
    "SkuName": {
      "type": "string"
    },
    "AppRegistrationSPObjectID": {
      "type": "string"
    },
    "DevGroupObjId": {
      "type": "string"
    },
    "ExceptionAlertName": {
      "type": "string"
    },
    "ExceptionAlertDescription": {
      "type": "string"
    },
    "ExceptionAlertSeverity": {
      "type": "int"
    },
    "ExceptionAlertFrequency": {
      "type": "string"
    },
    "ExceptionAlertTimeWindow": {
      "type": "string"
    },
    "ExceptionAlertMuteDuration": {
      "type": "string"
    },
    "ExceptionAlertThreshold": {
      "type": "int"
    },
    "ExceptionAlertOperator": {
      "type": "string"
    },
    "ExceptionAlertTimeAgg": {
      "type": "string"
    },
    "ExceptionActionGroupName": {
      "type": "string"
    },
    "ExceptionActionGroupShortName": {
      "type": "string"
    },
    "ExceptionActionGroupEmails": {
      "type": "array"
    }
  },
  "functions": [],
  "variables": {},
  "resources": [
    {
      "name": "[parameters('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "tags": {
        "displayName": "[parameters('StorageAccountName')]"
      },
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2018-03-01-preview",
      "name": "[concat(parameters('StorageAccountName'),'/default/', parameters('BlobContainer1'))]",
      "dependsOn": ["[parameters('StorageAccountName')]"],
      "properties": {
        "publicAccess": "Container"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2018-03-01-preview",
      "name": "[concat(parameters('StorageAccountName'),'/default/', parameters('BlobContainer2'))]",
      "dependsOn": ["[parameters('StorageAccountName')]"],
      "properties": {
        "publicAccess": "Container"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2018-03-01-preview",
      "name": "[concat(parameters('StorageAccountName'),'/default/', parameters('BlobContainer3'))]",
      "dependsOn": ["[parameters('StorageAccountName')]"],
      "properties": {
        "publicAccess": "Container"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('FAInsightsName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[parameters('FAServerFarmName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "reserved": true,
        "computeMode": "Dynamic"
      }
    },
    {
      "name": "[parameters('CollectorsFAName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "location": "[resourceGroup().location]",
      "kind": "functionapp,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('FAInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('FAServerFarmName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "reserved": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('FAServerFarmName'))]",
        "siteConfig": {
          "linuxFxVersion": "Python|3.8",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('CollectorsFAName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('FAInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME_VERSION",
              "value": "3.8"
            },
            {
              "name": "ResourceGroupName",
              "value": "[parameters('ResourceGroupName')]"
            },
            {
              "name": "BlobContainer1",
              "value": "[parameters('BlobContainer1')]"
            },
            {
              "name": "BlobContainer2",
              "value": "[parameters('BlobContainer2')]"
            },
            {
              "name": "BlobContainer3",
              "value": "[parameters('BlobContainer3')]"
            },
            {
              "name": "KeyVaultName",
              "value": "[parameters('KeyVaultName')]"
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('ProcessorsFAName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "location": "[resourceGroup().location]",
      "kind": "functionapp,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('FAInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('FAServerFarmName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "reserved": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('FAServerFarmName'))]",
        "siteConfig": {
          "linuxFxVersion": "Python|3.8",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('ProcessorsFAName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('FAInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME_VERSION",
              "value": "3.8"
            },
            {
              "name": "ResourceGroupName",
              "value": "[parameters('ResourceGroupName')]"
            },
            {
              "name": "BlobContainer1",
              "value": "[parameters('BlobContainer1')]"
            },
            {
              "name": "BlobContainer2",
              "value": "[parameters('BlobContainer2')]"
            },
            {
              "name": "BlobContainer3",
              "value": "[parameters('BlobContainer3')]"
            },
            {
              "name": "KeyVaultName",
              "value": "[parameters('KeyVaultName')]"
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('LoadersFAName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "location": "[resourceGroup().location]",
      "kind": "functionapp,linux",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('FAInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('FAServerFarmName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "reserved": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('FAServerFarmName'))]",
        "siteConfig": {
          "linuxFxVersion": "Python|3.8",
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('LoadersFAName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('FAInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME_VERSION",
              "value": "3.8"
            },
            {
              "name": "PSQL_CONNECTIONSTRING",
              "value": "[concat('dbname=',parameters('PostgresDBName'),' user=',parameters('adminLogin'),'@',parameters('PostgresServerName'),' host=',parameters('PostgresServerName'),'.postgres.database.azure.com password=',parameters('adminPassword'),' port=5432 sslmode=require')]"
            },
            {
              "name": "ResourceGroupName",
              "value": "[parameters('ResourceGroupName')]"
            },
            {
              "name": "BlobContainer2",
              "value": "[parameters('BlobContainer2')]"
            },
            {
              "name": "KeyVaultName",
              "value": "[parameters('KeyVaultName')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/servers",
      "apiVersion": "2017-12-01-preview",
      "name": "[parameters('PostgresServerName')]",
      "location": "uksouth",
      "properties": {
        "administratorLogin": "[parameters('adminLogin')]",
        "administratorLoginPassword": "[parameters('adminPassword')]",
        "version": "11",
        "sslEnforcement": "Disabled",
        "storageProfile": {
          "storageMB": 5120,
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "createMode": "Default",
        "publicNetworkAccess": "Enabled"
      },
      "sku": {
        "name": "B_Gen5_1",
        "tier": "Basic"
      },
      "resources": [
        {
          "type": "databases",
          "apiVersion": "2017-12-01-preview",
          "name": "[parameters('PostgresDBName')]",
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('PostgresServerName'))]"
          ]
        },
        {
          "type": "firewallRules",
          "apiVersion": "2017-12-01",
          "name": "azureconnections",
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('PostgresServerName'))]"
          ],
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[parameters('KeyVaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enabledForDeployment": "[parameters('KeyVaultEnabledForDeployment')]",
        "enabledForDiskEncryption": "[parameters('KeyVaultEnabledForDiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('KeyVaultEnabledForTemplateDeployment')]",
        "tenantId": "[subscription().tenantId]",
        "enableSoftDelete": false,
        "softDeleteRetentionInDays": 90,
        "accessPolicies": [
          {
            "objectId": "[parameters('AppRegistrationSPObjectID')]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "secrets": ["set"]
            }
          },
          {
            "objectId": "[parameters('DevGroupObjId')]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "secrets": ["list", "get"]
            }
          },
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('CollectorsFAName')), '2019-08-01', 'full').identity.principalId]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "secrets": ["get"]
            }
          },
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('ProcessorsFAName')), '2019-08-01', 'full').identity.principalId]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "secrets": ["get"]
            }
          },
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('LoadersFAName')), '2019-08-01', 'full').identity.principalId]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "secrets": ["get"]
            }
          }
        ],
        "sku": {
          "name": "[parameters('SkuName')]",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}',parameters('KeyVaultName'), 'adzunaAppKey')]",
      "properties": {
        "value": ""
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}',parameters('KeyVaultName'), 'adzunaAppId')]",
      "properties": {
        "value": ""
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2021-09-01",
      "name": "[parameters('ExceptionActionGroupName')]",
      "location": "Global",
      "properties": {
        "groupShortName": "[parameters('ExceptionActionGroupShortName')]",
        "enabled": true,
        "webhookReceivers": "[parameters('ExceptionActionGroupEmails')]"
      }
    },
    {
      "type": "Microsoft.Insights/scheduledQueryRules",
      "apiVersion": "2021-08-01",
      "name": "[parameters('ExceptionAlertName')]",
      "location": "uksouth",
      "properties": {
        "description": "[parameters('ExceptionAlertDescription')]",
        "severity": "[parameters('ExceptionAlertSeverity')]",
        "enabled": true,
        "muteActionsDuration": "[parameters('ExceptionAlertMuteDuration')]",
        "autoMitigate": false,
        "scopes": [
          "[resourceId('Microsoft.Insights/components', parameters('FAInsightsName'))]"
        ],
        "evaluationFrequency": "[parameters('ExceptionAlertFrequency')]",
        "windowSize": "[parameters('ExceptionAlertTimeWindow')]",
        "criteria": {
          "allOf": [
            {
              "query": "union traces
                | union exceptions
                | where timestamp > ago(15m)
                | where operation_Name != ''
                | where type != ''
                | order by timestamp asc
                | project timestamp,
                  message = iff(message != '', message, iff(innermostMessage != '', innermostMessage, customDimensions.['prop__{OriginalFormat}'])),
                  logLevel = 'Error',
                  operation_Name,
                  type",
              "dimensions": [],
              "operator": "[parameters('ExceptionAlertOperator')]",
              "threshold": "[parameters('ExceptionAlertThreshold')]",
              "timeAggregation": "[parameters('ExceptionAlertTimeAgg')]"
            }
          ]
        },
        "actions": {
          "actionGroups": [
            "[resourceId('Microsoft.Insights/actionGroups', parameters('ExceptionActionGroupName'))]"
          ]
          
        }
      }
    }
  ],
  "outputs": {}
}
